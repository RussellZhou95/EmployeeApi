/*
 * Employee
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.employeeapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * StatusStatus
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-11-13T23:10:04.450-05:00[America/New_York]")
public class StatusStatus implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("serverStatusCode")
  private String serverStatusCode = null;

  /**
   * Gets or Sets severity
   */
  @JsonAdapter(SeverityEnum.Adapter.class)
  public enum SeverityEnum {
    ERROR("ERROR"),
    INFO("INFO");

    private String value;

    SeverityEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SeverityEnum fromValue(String text) {
      for (SeverityEnum b : SeverityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SeverityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SeverityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SeverityEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SeverityEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("severity")
  private SeverityEnum severity = null;

  @SerializedName("additionalStatus")
  private List<StatusStatusAdditionalStatus> additionalStatus = null;

  public StatusStatus serverStatusCode(String serverStatusCode) {
    this.serverStatusCode = serverStatusCode;
    return this;
  }

   /**
   * Get serverStatusCode
   * @return serverStatusCode
  **/
  @Schema(description = "")
  public String getServerStatusCode() {
    return serverStatusCode;
  }

  public void setServerStatusCode(String serverStatusCode) {
    this.serverStatusCode = serverStatusCode;
  }

  public StatusStatus severity(SeverityEnum severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Get severity
   * @return severity
  **/
  @Schema(description = "")
  public SeverityEnum getSeverity() {
    return severity;
  }

  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }

  public StatusStatus additionalStatus(List<StatusStatusAdditionalStatus> additionalStatus) {
    this.additionalStatus = additionalStatus;
    return this;
  }

  public StatusStatus addAdditionalStatusItem(StatusStatusAdditionalStatus additionalStatusItem) {
    if (this.additionalStatus == null) {
      this.additionalStatus = new ArrayList<>();
    }
    this.additionalStatus.add(additionalStatusItem);
    return this;
  }

   /**
   * Get additionalStatus
   * @return additionalStatus
  **/
  @Valid
  @Schema(description = "")
  public List<StatusStatusAdditionalStatus> getAdditionalStatus() {
    return additionalStatus;
  }

  public void setAdditionalStatus(List<StatusStatusAdditionalStatus> additionalStatus) {
    this.additionalStatus = additionalStatus;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusStatus statusStatus = (StatusStatus) o;
    return Objects.equals(this.serverStatusCode, statusStatus.serverStatusCode) &&
        Objects.equals(this.severity, statusStatus.severity) &&
        Objects.equals(this.additionalStatus, statusStatus.additionalStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serverStatusCode, severity, additionalStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusStatus {\n");
    
    sb.append("    serverStatusCode: ").append(toIndentedString(serverStatusCode)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    additionalStatus: ").append(toIndentedString(additionalStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
